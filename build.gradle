group 'PriParaSearch'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'javafx-gradle-plugin'

buildscript {
    ext.kotlin_version = '1.2.20'

    ext.windows_platform = 'windows-x86'
    ext.windows64_platform = 'windows-x86_64'
    ext.linux_platform = 'linux-x86'
    ext.linux64_platform = 'linux-x86_64'
    ext.linux_arm_platform = 'linux-armhf'
    ext.linux_ppc64le_platform = 'linux-ppc64le'
    ext.macos_platform = 'macosx-x86_64'
    ext.android_platform = 'android-arm'
    ext.android_x86_platform = 'android-x86'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "de.dynamicfiles.projects.gradle.plugins:javafx-gradle-plugin:8.8.2"
    }
}


repositories {
    mavenCentral()
}

sourceSets {
    main.java.srcDirs = ['src/main/kotlin']
    main.resources.srcDirs = ['src/main/resources']
}

mainClassName = 'work.airz.MainKt'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile("org.bytedeco:javacv-platform:1.4"){
        exclude group: "org.bytedeco.javacpp-presets", module: "flandmark"
        exclude group: "org.bytedeco.javacpp-presets", module: "opencv"
        exclude group: "org.bytedeco.javacpp-presets", module: "flycapture"
        exclude group: "org.bytedeco.javacpp-presets", module: "libdc1394"
        exclude group: "org.bytedeco.javacpp-presets", module: "libfreenect"
        exclude group: "org.bytedeco.javacpp-presets", module: "libfreenect2"
        exclude group: "org.bytedeco.javacpp-presets", module: "librealsense"
        exclude group: "org.bytedeco.javacpp-presets", module: "videoinput"
        exclude group: "org.bytedeco.javacpp-presets", module: "artoolkitplus"
    }
    compile fileTree(dir: 'libs', include: '*.jar')
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jfx {
    mainClass = 'work.airz.MainKt'
    additionalBundlerResources = 'src/main/resources'
    vendor = 'Khrom'
}

//jar {
//    manifest {
//        attributes 'Main-Class': 'work.airz.MainKt'
//    }
//    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//}